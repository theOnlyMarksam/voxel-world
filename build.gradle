import org.gradle.internal.os.OperatingSystem

group 'org.voxel'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'

mainClassName = 'main.Game'

sourceCompatibility = 1.8

switch ( OperatingSystem.current() ) {
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
    case OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
}

project.ext.lwjglVersion = "3.1.5"
project.ext.jomlVersion = "1.9.6"

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'org.apache.logging.log4j:log4j-api:2.9.1'
    compile 'org.apache.logging.log4j:log4j-core:2.9.1'

    compile "org.joml:joml:${jomlVersion}"
    compile "org.lwjgl:lwjgl:$lwjglVersion"
    compile "org.lwjgl:lwjgl-assimp:$lwjglVersion"
    compile "org.lwjgl:lwjgl-bgfx:$lwjglVersion"
    compile "org.lwjgl:lwjgl-glfw:$lwjglVersion"
    compile "org.lwjgl:lwjgl-nanovg:$lwjglVersion"
    compile "org.lwjgl:lwjgl-nuklear:$lwjglVersion"
    compile "org.lwjgl:lwjgl-openal:$lwjglVersion"
    compile "org.lwjgl:lwjgl-opengl:$lwjglVersion"
    compile "org.lwjgl:lwjgl-par:$lwjglVersion"
    compile "org.lwjgl:lwjgl-stb:$lwjglVersion"
    compile "org.lwjgl:lwjgl-vulkan:$lwjglVersion"

    runtime "org.lwjgl:lwjgl:$lwjglVersion:$lwjglNatives"
    runtime "org.lwjgl:lwjgl-assimp:$lwjglVersion:$lwjglNatives"
    runtime "org.lwjgl:lwjgl-bgfx:$lwjglVersion:$lwjglNatives"
    runtime "org.lwjgl:lwjgl-glfw:$lwjglVersion:$lwjglNatives"
    runtime "org.lwjgl:lwjgl-nanovg:$lwjglVersion:$lwjglNatives"
    runtime "org.lwjgl:lwjgl-nuklear:$lwjglVersion:$lwjglNatives"
    runtime "org.lwjgl:lwjgl-openal:$lwjglVersion:$lwjglNatives"
    runtime "org.lwjgl:lwjgl-opengl:$lwjglVersion:$lwjglNatives"
    runtime "org.lwjgl:lwjgl-par:$lwjglVersion:$lwjglNatives"
    runtime "org.lwjgl:lwjgl-stb:$lwjglVersion:$lwjglNatives"
}

jar {
    doFirst {
        manifest {
            if (!configurations.runtime.isEmpty()) {
                attributes('Class-Path':
                        configurations.runtime.collect{it.toURI().toString()}.join(' '))
            }
        }
    }
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                'Implementation-Version': version,
                'Main-Class': mainClassName
    }
}

task getDeps(type: Copy) {
    from sourceSets.main.runtimeClasspath
    into 'runtime/'
}
